<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>scopeName</key>
        <string>injection.ansible.jinja-conditionals</string>
        <key>name</key>
        <string>Grammar for Jinja2 expressions surrounded by double curly braces</string>
        <key>patterns</key>
        <array>
            <dict>
                <key>include</key>
                <string>#ansible-condition</string>
            </dict>
        </array>
        <key>comment</key>
        <string>Flow style collections are not supported (yet)</string>
        <key>repository</key>
        <dict>
            <key>test</key>
            <dict>
                <key>begin</key>
                <string>^(\s*)</string>
                <key>end</key>
                <string>^(?!\1s+)</string>
                <key>name</key>
                <string>asdf.test.ansible</string>
            </dict>
            <key>ansible-condition</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>comment</key>
                        <array>
                            <string>Flow style expression</string>
                        </array>
                        <key>begin</key>
                        <string>(?x)
                            ^(\s*) # 1
                            (?:(-)(\s+))? # 2, 3; in case it is first key of a list item
                            \b( # 4
                                changed_when
                                | failed_when
                                | when
                                | check_mode
                            )\b
                            \s* (:) # 5
                            (?!\s+[|&gt;]|\s*$) # not starting a block
                            \s+ (["']?) # 6
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.sequence.item.ansible</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.other.special-method.ansible</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.separator.key-value.mapping.ansible</string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.ansible</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?x)
                            (
                                  ^(?!\1\3\3\s+) # if the indentation is too small; HACK: \3 is used twice to match at least 2 spaces if group 2 matches
                                | ((?=["'])\6) \s* $ # 1; if it started with a quote and the line ends
                            )
                        </string>
                        <key>endCaptures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.ansible</string>
                            </dict>
                        </dict>
                        <key>contentName</key>
                        <string>variable.other.constant.ansible variable.language meta.embedded.inline.jinja</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#test</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>source.jinja#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(?x)
                            ^(\s*) # 1
                            (?:(-)(\s+))? # 2, 3; in case it is first key of a list item
                            \b( # 4
                                changed_when
                                | failed_when
                                | when
                                | check_mode
                            )\b
                            \s* (:) # 5
                            \s*$ # starting a block collection or string in block
                        </string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.sequence.item.ansible</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.other.special-method.ansible</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.separator.key-value.mapping.ansible</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>(?x)
                            (
                                  ^(?!\1\3\3\s+) # if the indentation is too small; HACK: \3 is used twice to match at least 2 spaces if group 2 matches
                                | ((?=["'])\6) \s* $ # 1; if it started with a quote and the line ends
                            )
                        </string>
                        <key>end</key>
                        <string>^(?!\1\s+-\s+|$)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>begin</key>
                                <string>(?:["'])(.*)(?=["']\s*?$)</string>
                                <key>beginCaptures</key>
                                <dict>
                                    <key>1</key>
                                    <dict>
                                        <key>patterns</key>
                                        <array>
                                            <dict>
                                                <key>include</key>
                                                <string>source.jinja#expression</string>
                                            </dict>
                                        </array>
                                    </dict>
                                </dict>
                                <key>end</key>
                                <string>$</string>
                            </dict>
                            <dict>
                                <key>include</key>
                                <string>source.jinja#expression</string>
                            </dict>
                        </array>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>(\s*)(?:(?:-\s+)?((?:changed_|failed_)?when|check_mode):\s+|-\s+)(?:(\|)|(&gt;))([1-9])?([-+])?(.*\n?)</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>2</key>
                            <dict>
                                <key>name</key>
                                <string>keyword.other.special-method.ansible</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.scalar.literal.ansible</string>
                            </dict>
                            <key>4</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.block.scalar.folded.ansible</string>
                            </dict>
                            <key>5</key>
                            <dict>
                                <key>name</key>
                                <string>constant.numeric.indentation-indicator.ansible</string>
                            </dict>
                            <key>6</key>
                            <dict>
                                <key>name</key>
                                <string>support.other.chomping-indicator.ansible</string>
                            </dict>
                            <key>7</key>
                            <dict>
                                <key>patterns</key>
                                <array>
                                    <dict>
                                        <key>include</key>
                                        <string>#comment</string>
                                    </dict>
                                    <dict>
                                        <key>match</key>
                                        <string>.+</string>
                                        <key>name</key>
                                        <string>invalid.illegal.expected-comment-or-newline.ansible</string>
                                    </dict>
                                </array>
                            </dict>
                        </dict>
                        <key>contentName</key>
                        <string>string.unquoted.block.ansible</string>
                        <key>end</key>
                        <string>^(?!\1\s+\S|$)</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>source.jinja#expression</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
        </dict>
    </dict>
</plist>